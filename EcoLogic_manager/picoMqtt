#if defined(USE_PICOMQTT)
#include <PicoMQTT.h>
#include <ESP8266WiFi.h>

// Use values from EcoLogic_manager.ino (USE_PUBSUBCLIENT section)
const char* MQTT_SERVER = "177e3ee7cf004e6ebed04b25d4c51a26.s1.eu.hivemq.cloud";
const int MQTT_PORT = 8883;
const char* MQTT_USER = "dev01";
const char* MQTT_PASS = "5506487";

PicoMQTT::Client mqtt(MQTT_SERVER, MQTT_PORT, MQTT_USER, MQTT_PASS);

unsigned long last_publish_time = 0;
int greeting_number = 1;

bool setup_picoMqtt() {
    Serial.begin(115200);
    // WiFi credentials should be set elsewhere in the main project
    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("WiFi not connected, MQTT will not start");
        return false;
    }
    // Subscribe to a topic and attach a callback
    mqtt.subscribe("picomqtt/#", [](const char * topic, const char * payload) {
        Serial.printf("Received message in topic '%s': %s\n", topic, payload);
    });
    mqtt.begin();
    Serial.println("PicoMQTT client started");
    return true;
}

void loop_picoMqtt() {
    mqtt.loop();
    // Publish a greeting message every 3 seconds.
    if (millis() - last_publish_time >= 3000) {
        String topic = "picomqtt/esp-" + WiFi.macAddress();
        String message = "Hello #" + String(greeting_number++);
        Serial.printf("Publishing message in topic '%s': %s\n", topic.c_str(), message.c_str());
        mqtt.publish(topic, message);
        last_publish_time = millis();
    }
}
#endif
